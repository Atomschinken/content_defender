language: php

addons:
  apt:
    packages:
      - parallel
  sonarcloud:
    organization: "ichhabrecht-github"
    branches:
      - master
      - pre-merge

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.sonar/cache

jdk:
  - oraclejdk8

sudo: required

before_install:
  - if php -i | grep -q xdebug; then phpenv config-rm xdebug.ini; fi

install:
  - >
    if [[ "$TYPO3" = *"dev"* ]]; then
      composer config minimum-stability dev;
      composer config prefer-stable true;
      composer require typo3/cms-backend="@dev" --no-update;
    fi
  - composer require nimut/typo3-complete="$TYPO3"
  - mkdir -p .Build/Web/typo3conf/ext/
  - if [ ! -L .Build/Web/typo3conf/ext/content_defender ]; then ln -snvf ../../../../. .Build/Web/typo3conf/ext/content_defender; fi
  - export TYPO3_PATH_ROOT=$PWD/.Build/Web
  - export typo3DatabaseName=typo3
  - export typo3DatabaseHost=localhost
  - export typo3DatabaseUsername=root
  - export typo3DatabasePassword=

script:
  - >
    echo;
    echo "Running unit tests";
    echo;
    echo;
    .Build/bin/phpunit --bootstrap .Build/vendor/nimut/testing-framework/res/Configuration/UnitTestsBootstrap.php Tests/Unit/;

  - >
    echo;
    echo "Running functional tests";
    echo;
    echo;
    find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo "Running functional test suite {}"; .Build/bin/phpunit --bootstrap .Build/vendor/nimut/testing-framework/res/Configuration/FunctionalTestsBootstrap.php {}';

  - >
    echo;
    echo "Running php lint";
    echo;
    echo;
    find . -name \*.php ! -path "./.Build/*" | parallel --gnu php -d display_errors=stderr -l {} > /dev/null \;;

jobs:
  fast_finish: true
  allow_failures:
    - env: TYPO3=dev-master
    - env: TYPO3=8.7.x-dev
  include:
    - stage: test
      php: 7.2
      env: TYPO3=dev-master
    - stage: test
      php: 7.2
      env: TYPO3=^9.0
    - stage: test
      php: 7.2
      env: TYPO3=^8.0
    - stage: test
      php: 7.2
      env: TYPO3=8.7.x-dev
    - stage: test
      php: 7.1
      env: TYPO3=^8.0
    - stage: test
      php: 7.1
      env: TYPO3=8.7.x-dev
    - stage: test
      php: 7.0
      env: TYPO3=^8.0
    - stage: test
      php: 7.0
      env: TYPO3=8.7.x-dev

    - stage: publish to ter
      if: tag IS present
      php: 7.0
      before_install: skip
      install: skip
      before_script: skip
      script:
        - >
          if [ -n "$TYPO3_ORG_USERNAME" ] && [ -n "$TYPO3_ORG_PASSWORD" ]; then
            echo;
            echo "Preparing upload of release ${TRAVIS_TAG} to TER";
            echo;
            echo;
            composer install --no-dev;
            composer require --update-no-dev helhum/ter-client dev-master;

            # Cleanup before we upload
            git reset --hard HEAD && git clean -fx;

            # Upload
            TAG_MESSAGE=`git tag -n10 -l $TRAVIS_TAG | sed 's/^[0-9.]*[ ]*//g'`;
            echo;
            echo "Uploading release ${TRAVIS_TAG} to TER";
            echo;
            echo;
            .Build/bin/ter-client upload content_defender . -u "$TYPO3_ORG_USERNAME" -p "$TYPO3_ORG_PASSWORD" -m "$TAG_MESSAGE";
          fi

    - stage: sonarqube scanner
      if: type = push AND branch IN (master, pre-merge)
      php: 7.2
      env: TYPO3=^9.0
      before_install: skip
      install:
        - composer require nimut/typo3-complete="$TYPO3"
        - mkdir -p .Build/Web/typo3conf/ext/ .Build/log/coverage/ .Build/log/tests/
        - if [ ! -L .Build/Web/typo3conf/ext/content_defender ]; then ln -snvf ../../../../. .Build/Web/typo3conf/ext/content_defender; fi
        - export TYPO3_PATH_ROOT=$PWD/.Build/Web
        - export typo3DatabaseName=typo3
        - export typo3DatabaseHost=localhost
        - export typo3DatabaseUsername=root
        - export typo3DatabasePassword=
      before_script:
      script:
        - >
          echo;
          echo "Running unit tests";
          echo;
          echo;
          .Build/bin/phpunit --bootstrap .Build/vendor/nimut/testing-framework/res/Configuration/UnitTestsBootstrap.php Tests/Unit/;

        - >
          echo;
          echo "Running functional tests";
          echo;
          echo;
          .Build/bin/phpunit --bootstrap .Build/vendor/nimut/testing-framework/res/Configuration/FunctionalTestsBootstrap.php --log-junit .Build/log/tests/functional.xml --coverage-php .Build/log/coverage/functional.cov Tests/Functional/;

        - >
          echo;
          echo "Merging log and coverage files";
          echo;
          echo;
          .Build/bin/phpunit-merger coverage .Build/log/coverage/ .Build/log/coverage.xml;
          .Build/bin/phpunit-merger log .Build/log/tests/ .Build/log/tests.xml;

        - git fetch --unshallow

        - >
          echo;
          echo "Running SonarQube Scanner";
          echo;
          echo;
          sonar-scanner;
